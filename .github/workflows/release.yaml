name: Release

on:
  push:
    tags:
      - v*

jobs:
  release-pypi:
    name: release-pypi
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: "x64"
      - name: Cache venv
        uses: actions/cache@v1
        with:
          path: venv
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ubuntu-latest-poetryenv-${{ hashFiles('poetry.lock') }}
      - name: Install system dependencies
        run: sudo apt install -y libkrb5-dev
      - name: Install Dependencies
        run: |
          python3 -m venv venv
          . venv/bin/activate
          pip install -U pip poetry
          poetry install
          python -c "import sys; print(sys.version)"
          pip list
      - name: Poetry Build
        run: |
          . venv/bin/activate
          poetry build
      - name: Test Build
        run: |
          python3 -m venv fresh_env
          . fresh_env/bin/activate
          pip install dist/*.whl

          lobbyboy-server -h

      - name: Upload to Pypi
        env:
          PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          . venv/bin/activate
          poetry publish --username __token__ --password ${PASSWORD}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  push-iamge:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: lobbyboy
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log in to registry
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          VERSION=latest
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
